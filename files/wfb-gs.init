#!/bin/sh /etc/rc.common
START=99
STOP=1

USE_PROCD=1
CONFFILE=wfb-gs
USER="root"

start_service() {
	config_load "${CONFFILE}"
	local ip_gs
	local ip_pc
	local wiphy_index
	local stream_video
	local stream_telemetry
	local port_video
	local port_telemetry
	local keydir
	local unit
	local link_id
	local channel
	local bandwidth
	local mode

	config_get ip_gs config ip_gs
	config_get ip_pc config ip_pc
	config_get wiphy_index config wiphy_index
	config_get stream_video config stream_video
	config_get stream_telemetry config stream_telemetry
	config_get port_video config port_video
	config_get port_telemetry config port_telemetry
	config_get keydir config keydir
	config_get unit config unit
	config_get link_id config link_id
	config_get channel config channel
	config_get bandwidth config bandwidth
	config_get mode config mode

	[ -z $wiphy_index ] && { sh /rom/etc/uci-defaults/91_wfb-gs_wifi; sleep 10; config_load "${CONFFILE}"; config_get wiphy_index config wiphy_index; }
	[[ "$(iw dev phy${wiphy_index}-wfb info | grep channel | cut -d \  -f 2)" == "$channel" && "$(iw dev phy${wiphy_index}-wfb info | grep channel | cut -d \  -f 6)" == "$bandwidth" ]] || { sh /rom/etc/uci-defaults/91_wfb-gs_wifi; sleep 10; }
	[[ -d /sys/class/net/usb0 || "$mode" == "multicast" ]] || ip_gs=$ip_pc

	procd_open_instance
	procd_set_param command /usr/bin/wfb_rx -p "$stream_video" -c "$ip_gs" -u "$port_video" -K "$keydir/$unit.key" -i "$link_id" "phy$wiphy_index-wfb" > /dev/null
	procd_set_param user "$USER"
	procd_set_param respawn 30 20 10
	procd_close_instance

	procd_open_instance
	procd_set_param command /usr/bin/telemetry_rx -p "$stream_telemetry" -c "$ip_gs" -u "$port_telemetry" -K "$keydir/$unit.key" -i "$link_id" "phy$wiphy_index-wfb" > /dev/null
	procd_set_param user "$USER"
	procd_set_param respawn 30 20 10
	procd_close_instance
}

service_triggers()
{
	procd_add_reload_trigger "$CONFFILE"
}

reload_service()
{
	stop
	start
}

